/* Generated by the protocol buffer compiler.  DO NOT EDIT! */

#ifndef PROTOBUF_C_debugger_2eproto__INCLUDED
#define PROTOBUF_C_debugger_2eproto__INCLUDED

#include <google/protobuf-c/protobuf-c.h>

PROTOBUF_C_BEGIN_DECLS


typedef struct _Proto__Version Proto__Version;
typedef struct _Proto__AnnounceDetails Proto__AnnounceDetails;
typedef struct _Proto__ExecutionDetails Proto__ExecutionDetails;
typedef struct _Proto__DebugCommand Proto__DebugCommand;
typedef struct _Proto__ClientMessage Proto__ClientMessage;
typedef struct _Proto__ProcessInfo Proto__ProcessInfo;
typedef struct _Proto__FunctionArgument Proto__FunctionArgument;
typedef struct _Proto__FunctionCall Proto__FunctionCall;
typedef struct _Proto__GLFunction Proto__GLFunction;
typedef struct _Proto__GLFunctions Proto__GLFunctions;
typedef struct _Proto__ServerMessage Proto__ServerMessage;


/* --- enums --- */

typedef enum _Proto__ExecutionDetails__Operation {
  PROTO__EXECUTION_DETAILS__OPERATION__CONTINUE = 0,
  PROTO__EXECUTION_DETAILS__OPERATION__HALT = 1,
  PROTO__EXECUTION_DETAILS__OPERATION__STEP = 2,
  PROTO__EXECUTION_DETAILS__OPERATION__TO_SHADER_SWITCH = 3,
  PROTO__EXECUTION_DETAILS__OPERATION__TO_DRAW_CALL = 4,
  PROTO__EXECUTION_DETAILS__OPERATION__TO_USER_DEFINED = 5
} Proto__ExecutionDetails__Operation;
typedef enum _Proto__DebugCommand__Type {
  PROTO__DEBUG_COMMAND__TYPE__DONE = 1,
  PROTO__DEBUG_COMMAND__TYPE__CALL_FUNCTION = 2,
  PROTO__DEBUG_COMMAND__TYPE__RECORD_CALL = 3,
  PROTO__DEBUG_COMMAND__TYPE__CALL_ORIGFUNCTION = 4,
  PROTO__DEBUG_COMMAND__TYPE__EXECUTE = 5,
  PROTO__DEBUG_COMMAND__TYPE__ALLOC_MEM = 6,
  PROTO__DEBUG_COMMAND__TYPE__FREE_MEM = 7,
  PROTO__DEBUG_COMMAND__TYPE__READ_RENDER_BUFFER = 8,
  PROTO__DEBUG_COMMAND__TYPE__CLEAR_RENDER_BUFFER = 9,
  PROTO__DEBUG_COMMAND__TYPE__SET_DBG_TARGET = 10,
  PROTO__DEBUG_COMMAND__TYPE__RESTORE_RENDER_TARGET = 11,
  PROTO__DEBUG_COMMAND__TYPE__START_RECORDING = 12,
  PROTO__DEBUG_COMMAND__TYPE__REPLAY = 13,
  PROTO__DEBUG_COMMAND__TYPE__END_REPLAY = 14,
  PROTO__DEBUG_COMMAND__TYPE__STORE_ACTIVE_SHADER = 15,
  PROTO__DEBUG_COMMAND__TYPE__RESTORE_ACTIVE_SHADER = 16,
  PROTO__DEBUG_COMMAND__TYPE__SET_DBG_SHADER = 17,
  PROTO__DEBUG_COMMAND__TYPE__GET_SHADER_CODE = 18,
  PROTO__DEBUG_COMMAND__TYPE__SHADER_STEP = 19,
  PROTO__DEBUG_COMMAND__TYPE__SAVE_AND_INTERRUPT_QUERIES = 20,
  PROTO__DEBUG_COMMAND__TYPE__RESTART_QUERIES = 21,
  PROTO__DEBUG_COMMAND__TYPE__CALL_ORIGFUNCTION_AND_PROCEED = 22
} Proto__DebugCommand__Type;
typedef enum _Proto__ClientMessage__Type {
  PROTO__CLIENT_MESSAGE__TYPE__ANNOUNCE = 0,
  PROTO__CLIENT_MESSAGE__TYPE__PROCESS_INFO = 1,
  PROTO__CLIENT_MESSAGE__TYPE__GL_FUNCTIONS = 2,
  PROTO__CLIENT_MESSAGE__TYPE__FUNCTION_CALL = 3,
  PROTO__CLIENT_MESSAGE__TYPE__EXECUTION = 4,
  PROTO__CLIENT_MESSAGE__TYPE__DEBUG_COMMAND = 5
} Proto__ClientMessage__Type;
typedef enum _Proto__DebugType {
  PROTO__DEBUG_TYPE__CHAR = 0,
  PROTO__DEBUG_TYPE__UNSIGNED_CHAR = 1,
  PROTO__DEBUG_TYPE__SHORT = 2,
  PROTO__DEBUG_TYPE__UNSIGNED_SHORT = 3,
  PROTO__DEBUG_TYPE__INT = 4,
  PROTO__DEBUG_TYPE__UNSIGNED_INT = 5,
  PROTO__DEBUG_TYPE__LONG_INT = 6,
  PROTO__DEBUG_TYPE__UNSIGNED_LONG_INT = 7,
  PROTO__DEBUG_TYPE__LONG_LONG_INT = 8,
  PROTO__DEBUG_TYPE__UNSIGNED_LONG_LONG_INT = 9,
  PROTO__DEBUG_TYPE__FLOAT = 10,
  PROTO__DEBUG_TYPE__DOUBLE = 11,
  PROTO__DEBUG_TYPE__LONGDOUBLE = 12,
  PROTO__DEBUG_TYPE__POINTER = 13,
  PROTO__DEBUG_TYPE__STRUCT = 14,
  PROTO__DEBUG_TYPE__BITFIELD = 15,
  PROTO__DEBUG_TYPE__ENUM = 16,
  PROTO__DEBUG_TYPE__BOOL = 17
} Proto__DebugType;
typedef enum _Proto__ErrorCode {
  PROTO__ERROR_CODE__NONE = 0,
  PROTO__ERROR_CODE__HEADER_MISMATCH = 1,
  PROTO__ERROR_CODE__VERSION_MISMATCH = 2,
  PROTO__ERROR_CODE__AUTH_FAILED = 3,
  PROTO__ERROR_CODE__GENERIC_ERROR = 4
} Proto__ErrorCode;

/* --- messages --- */

struct  _Proto__Version
{
  ProtobufCMessage base;
  int32_t major;
  int32_t minor;
  int32_t revision;
};
#define PROTO__VERSION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__version__descriptor) \
    , 0, 0, 0 }


struct  _Proto__AnnounceDetails
{
  ProtobufCMessage base;
  int32_t id;
  char *client_name;
  Proto__Version *version;
};
#define PROTO__ANNOUNCE_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__announce_details__descriptor) \
    , 0, NULL, NULL }


struct  _Proto__ExecutionDetails
{
  ProtobufCMessage base;
  Proto__ExecutionDetails__Operation operation;
  Proto__FunctionCall *call;
};
#define PROTO__EXECUTION_DETAILS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__execution_details__descriptor) \
    , 0, NULL }


struct  _Proto__DebugCommand
{
  ProtobufCMessage base;
  Proto__DebugCommand__Type type;
};
#define PROTO__DEBUG_COMMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__debug_command__descriptor) \
    , 0 }


struct  _Proto__ClientMessage
{
  ProtobufCMessage base;
  Proto__ClientMessage__Type type;
  uint64_t id;
  protobuf_c_boolean has_thread_id;
  uint64_t thread_id;
  Proto__AnnounceDetails *announce;
  Proto__ExecutionDetails *execution;
  Proto__DebugCommand *command;
};
#define PROTO__CLIENT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__client_message__descriptor) \
    , 0, 0, 0,0, NULL, NULL, NULL }


struct  _Proto__ProcessInfo
{
  ProtobufCMessage base;
  char *executable;
  int32_t pid;
  protobuf_c_boolean is64bit;
  size_t n_thread_id;
  uint64_t *thread_id;
};
#define PROTO__PROCESS_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__process_info__descriptor) \
    , NULL, 0, 0, 0,NULL }


struct  _Proto__FunctionArgument
{
  ProtobufCMessage base;
  Proto__DebugType type;
  uint64_t address;
  ProtobufCBinaryData data;
};
#define PROTO__FUNCTION_ARGUMENT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__function_argument__descriptor) \
    , 0, 0, {0,NULL} }


struct  _Proto__FunctionCall
{
  ProtobufCMessage base;
  char *name;
  protobuf_c_boolean has_thread_id;
  uint64_t thread_id;
  protobuf_c_boolean has_return_type;
  Proto__DebugType return_type;
  protobuf_c_boolean has_return_data;
  ProtobufCBinaryData return_data;
  size_t n_arguments;
  Proto__FunctionArgument **arguments;
};
#define PROTO__FUNCTION_CALL__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__function_call__descriptor) \
    , NULL, 0,0, 0,0, 0,{0,NULL}, 0,NULL }


struct  _Proto__GLFunction
{
  ProtobufCMessage base;
  char *prefix;
  char *extname;
  char *name;
  protobuf_c_boolean is_debuggable;
  int32_t primitive_mode_index;
  protobuf_c_boolean is_shader_switch;
  protobuf_c_boolean is_frame_end;
  protobuf_c_boolean is_framebuffer_change;
};
#define PROTO__GLFUNCTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__glfunction__descriptor) \
    , NULL, NULL, NULL, 0, 0, 0, 0, 0 }


struct  _Proto__GLFunctions
{
  ProtobufCMessage base;
  size_t n_function;
  Proto__GLFunction **function;
};
#define PROTO__GLFUNCTIONS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__glfunctions__descriptor) \
    , 0,NULL }


struct  _Proto__ServerMessage
{
  ProtobufCMessage base;
  Proto__ErrorCode error_code;
  uint64_t id;
  char *message;
  size_t n_function_call;
  Proto__FunctionCall **function_call;
  Proto__GLFunctions *gl_functions;
  Proto__ProcessInfo *proc_info;
};
#define PROTO__SERVER_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&proto__server_message__descriptor) \
    , PROTO__ERROR_CODE__NONE, 0, NULL, 0,NULL, NULL, NULL }


/* Proto__Version methods */
void   proto__version__init
                     (Proto__Version         *message);
size_t proto__version__get_packed_size
                     (const Proto__Version   *message);
size_t proto__version__pack
                     (const Proto__Version   *message,
                      uint8_t             *out);
size_t proto__version__pack_to_buffer
                     (const Proto__Version   *message,
                      ProtobufCBuffer     *buffer);
Proto__Version *
       proto__version__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__version__free_unpacked
                     (Proto__Version *message,
                      ProtobufCAllocator *allocator);
/* Proto__AnnounceDetails methods */
void   proto__announce_details__init
                     (Proto__AnnounceDetails         *message);
size_t proto__announce_details__get_packed_size
                     (const Proto__AnnounceDetails   *message);
size_t proto__announce_details__pack
                     (const Proto__AnnounceDetails   *message,
                      uint8_t             *out);
size_t proto__announce_details__pack_to_buffer
                     (const Proto__AnnounceDetails   *message,
                      ProtobufCBuffer     *buffer);
Proto__AnnounceDetails *
       proto__announce_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__announce_details__free_unpacked
                     (Proto__AnnounceDetails *message,
                      ProtobufCAllocator *allocator);
/* Proto__ExecutionDetails methods */
void   proto__execution_details__init
                     (Proto__ExecutionDetails         *message);
size_t proto__execution_details__get_packed_size
                     (const Proto__ExecutionDetails   *message);
size_t proto__execution_details__pack
                     (const Proto__ExecutionDetails   *message,
                      uint8_t             *out);
size_t proto__execution_details__pack_to_buffer
                     (const Proto__ExecutionDetails   *message,
                      ProtobufCBuffer     *buffer);
Proto__ExecutionDetails *
       proto__execution_details__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__execution_details__free_unpacked
                     (Proto__ExecutionDetails *message,
                      ProtobufCAllocator *allocator);
/* Proto__DebugCommand methods */
void   proto__debug_command__init
                     (Proto__DebugCommand         *message);
size_t proto__debug_command__get_packed_size
                     (const Proto__DebugCommand   *message);
size_t proto__debug_command__pack
                     (const Proto__DebugCommand   *message,
                      uint8_t             *out);
size_t proto__debug_command__pack_to_buffer
                     (const Proto__DebugCommand   *message,
                      ProtobufCBuffer     *buffer);
Proto__DebugCommand *
       proto__debug_command__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__debug_command__free_unpacked
                     (Proto__DebugCommand *message,
                      ProtobufCAllocator *allocator);
/* Proto__ClientMessage methods */
void   proto__client_message__init
                     (Proto__ClientMessage         *message);
size_t proto__client_message__get_packed_size
                     (const Proto__ClientMessage   *message);
size_t proto__client_message__pack
                     (const Proto__ClientMessage   *message,
                      uint8_t             *out);
size_t proto__client_message__pack_to_buffer
                     (const Proto__ClientMessage   *message,
                      ProtobufCBuffer     *buffer);
Proto__ClientMessage *
       proto__client_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__client_message__free_unpacked
                     (Proto__ClientMessage *message,
                      ProtobufCAllocator *allocator);
/* Proto__ProcessInfo methods */
void   proto__process_info__init
                     (Proto__ProcessInfo         *message);
size_t proto__process_info__get_packed_size
                     (const Proto__ProcessInfo   *message);
size_t proto__process_info__pack
                     (const Proto__ProcessInfo   *message,
                      uint8_t             *out);
size_t proto__process_info__pack_to_buffer
                     (const Proto__ProcessInfo   *message,
                      ProtobufCBuffer     *buffer);
Proto__ProcessInfo *
       proto__process_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__process_info__free_unpacked
                     (Proto__ProcessInfo *message,
                      ProtobufCAllocator *allocator);
/* Proto__FunctionArgument methods */
void   proto__function_argument__init
                     (Proto__FunctionArgument         *message);
size_t proto__function_argument__get_packed_size
                     (const Proto__FunctionArgument   *message);
size_t proto__function_argument__pack
                     (const Proto__FunctionArgument   *message,
                      uint8_t             *out);
size_t proto__function_argument__pack_to_buffer
                     (const Proto__FunctionArgument   *message,
                      ProtobufCBuffer     *buffer);
Proto__FunctionArgument *
       proto__function_argument__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__function_argument__free_unpacked
                     (Proto__FunctionArgument *message,
                      ProtobufCAllocator *allocator);
/* Proto__FunctionCall methods */
void   proto__function_call__init
                     (Proto__FunctionCall         *message);
size_t proto__function_call__get_packed_size
                     (const Proto__FunctionCall   *message);
size_t proto__function_call__pack
                     (const Proto__FunctionCall   *message,
                      uint8_t             *out);
size_t proto__function_call__pack_to_buffer
                     (const Proto__FunctionCall   *message,
                      ProtobufCBuffer     *buffer);
Proto__FunctionCall *
       proto__function_call__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__function_call__free_unpacked
                     (Proto__FunctionCall *message,
                      ProtobufCAllocator *allocator);
/* Proto__GLFunction methods */
void   proto__glfunction__init
                     (Proto__GLFunction         *message);
size_t proto__glfunction__get_packed_size
                     (const Proto__GLFunction   *message);
size_t proto__glfunction__pack
                     (const Proto__GLFunction   *message,
                      uint8_t             *out);
size_t proto__glfunction__pack_to_buffer
                     (const Proto__GLFunction   *message,
                      ProtobufCBuffer     *buffer);
Proto__GLFunction *
       proto__glfunction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__glfunction__free_unpacked
                     (Proto__GLFunction *message,
                      ProtobufCAllocator *allocator);
/* Proto__GLFunctions methods */
void   proto__glfunctions__init
                     (Proto__GLFunctions         *message);
size_t proto__glfunctions__get_packed_size
                     (const Proto__GLFunctions   *message);
size_t proto__glfunctions__pack
                     (const Proto__GLFunctions   *message,
                      uint8_t             *out);
size_t proto__glfunctions__pack_to_buffer
                     (const Proto__GLFunctions   *message,
                      ProtobufCBuffer     *buffer);
Proto__GLFunctions *
       proto__glfunctions__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__glfunctions__free_unpacked
                     (Proto__GLFunctions *message,
                      ProtobufCAllocator *allocator);
/* Proto__ServerMessage methods */
void   proto__server_message__init
                     (Proto__ServerMessage         *message);
size_t proto__server_message__get_packed_size
                     (const Proto__ServerMessage   *message);
size_t proto__server_message__pack
                     (const Proto__ServerMessage   *message,
                      uint8_t             *out);
size_t proto__server_message__pack_to_buffer
                     (const Proto__ServerMessage   *message,
                      ProtobufCBuffer     *buffer);
Proto__ServerMessage *
       proto__server_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   proto__server_message__free_unpacked
                     (Proto__ServerMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Proto__Version_Closure)
                 (const Proto__Version *message,
                  void *closure_data);
typedef void (*Proto__AnnounceDetails_Closure)
                 (const Proto__AnnounceDetails *message,
                  void *closure_data);
typedef void (*Proto__ExecutionDetails_Closure)
                 (const Proto__ExecutionDetails *message,
                  void *closure_data);
typedef void (*Proto__DebugCommand_Closure)
                 (const Proto__DebugCommand *message,
                  void *closure_data);
typedef void (*Proto__ClientMessage_Closure)
                 (const Proto__ClientMessage *message,
                  void *closure_data);
typedef void (*Proto__ProcessInfo_Closure)
                 (const Proto__ProcessInfo *message,
                  void *closure_data);
typedef void (*Proto__FunctionArgument_Closure)
                 (const Proto__FunctionArgument *message,
                  void *closure_data);
typedef void (*Proto__FunctionCall_Closure)
                 (const Proto__FunctionCall *message,
                  void *closure_data);
typedef void (*Proto__GLFunction_Closure)
                 (const Proto__GLFunction *message,
                  void *closure_data);
typedef void (*Proto__GLFunctions_Closure)
                 (const Proto__GLFunctions *message,
                  void *closure_data);
typedef void (*Proto__ServerMessage_Closure)
                 (const Proto__ServerMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    proto__debug_type__descriptor;
extern const ProtobufCEnumDescriptor    proto__error_code__descriptor;
extern const ProtobufCMessageDescriptor proto__version__descriptor;
extern const ProtobufCMessageDescriptor proto__announce_details__descriptor;
extern const ProtobufCMessageDescriptor proto__execution_details__descriptor;
extern const ProtobufCEnumDescriptor    proto__execution_details__operation__descriptor;
extern const ProtobufCMessageDescriptor proto__debug_command__descriptor;
extern const ProtobufCEnumDescriptor    proto__debug_command__type__descriptor;
extern const ProtobufCMessageDescriptor proto__client_message__descriptor;
extern const ProtobufCEnumDescriptor    proto__client_message__type__descriptor;
extern const ProtobufCMessageDescriptor proto__process_info__descriptor;
extern const ProtobufCMessageDescriptor proto__function_argument__descriptor;
extern const ProtobufCMessageDescriptor proto__function_call__descriptor;
extern const ProtobufCMessageDescriptor proto__glfunction__descriptor;
extern const ProtobufCMessageDescriptor proto__glfunctions__descriptor;
extern const ProtobufCMessageDescriptor proto__server_message__descriptor;

PROTOBUF_C_END_DECLS


#endif  /* PROTOBUF_debugger_2eproto__INCLUDED */
